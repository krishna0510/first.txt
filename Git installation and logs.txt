deepak@deepak-pc MINGW64 /c/git
$ git init
Initialized empty Git repository in C:/git/.git/

deepak@deepak-pc MINGW64 /c/git (master)
$ git remote add origin "https://github.com/krishna0510/first.txt.git"

deepak@deepak-pc MINGW64 /c/git (master)
$ git origin
git: 'origin' is not a git command. See 'git --help'.

deepak@deepak-pc MINGW64 /c/git (master)
$ git remote
origin

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ git pull origin master
remote: Counting objects: 6, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (6/6), done.
From https://github.com/krishna0510/first.txt
 * branch            master     -> FETCH_HEAD
 * [new branch]      master     -> origin/master

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ ls -lrt
total 1
-rw-r--r-- 1 deepak 197609 47 Jul 22 01:47 README.md
-rw-r--r-- 1 deepak 197609  0 Jul 22 01:56 test.txt

deepak@deepak-pc MINGW64 /c/git (master)
$


deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ git staus
git: 'staus' is not a git command. See 'git --help'.

The most similar command is
        status

deepak@deepak-pc MINGW64 /c/git (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        test.txt

nothing added to commit but untracked files present (use "git add" to track)


deepak@deepak-pc MINGW64 /c/git (master)
$ git add *.txt

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   test.txt


deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ git commit -m "first commit in local"

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'deepak@deepak-pc.(none)')

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ git config --global user.name "krishna"

deepak@deepak-pc MINGW64 /c/git (master)
$ git config --global user.email "kumar.mohan.krishna@gmail.com"

deepak@deepak-pc MINGW64 /c/git (master)
$


deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   test.txt


deepak@deepak-pc MINGW64 /c/git (master)
$ git commit -m "first commit in local"
[master a4e18ff] first commit in local
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 test.txt

deepak@deepak-pc MINGW64 /c/git (master)
$


deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ tree -a
bash: tree: command not found

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ git log
commit a4e18ff1000573ea256b8efd5030cafb2d8f27bd (HEAD -> master)
Author: krishna <kumar.mohan.krishna@gmail.com>
Date:   Sun Jul 22 01:59:24 2018 +0530

    first commit in local

commit 0f237284a6ad44b0796bbcf90be4f65a183845f5 (origin/master)
Author: krishna0510 <38633279+krishna0510@users.noreply.github.com>
Date:   Sun Jul 22 01:37:42 2018 +0530

    Update README.md

commit f74d81a45590e7719f1a5a222da607b18bc93df2
Author: krishna0510 <38633279+krishna0510@users.noreply.github.com>
Date:   Sun Jul 22 01:36:48 2018 +0530

    Initial commit

deepak@deepak-pc MINGW64 /c/git (master)
$ git branch firstbranch

deepak@deepak-pc MINGW64 /c/git (master)
$


deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ git checkout firstbranch
Switched to branch 'firstbranch'

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ git status
On branch firstbranch
nothing to commit, working tree clean

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ git add -A

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ git commit -m "create text1 in firstbranch"
[firstbranch d29673d] create text1 in firstbranch
 1 file changed, 1 insertion(+)
 create mode 100644 test1.txt

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$


deepak@deepak-pc MINGW64 /c/git (firstbranch)
$

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ ls
README.md  test.txt  test1.txt

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ git checkout master
Switched to branch 'master'

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ ls
README.md  test.txt

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ git merge firstbranch
Updating a4e18ff..d29673d
Fast-forward
 test1.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 test1.txt

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ ls
README.md  test.txt  test1.txt

deepak@deepak-pc MINGW64 /c/git (master)
$ git checkout firstbranch
Switched to branch 'firstbranch'

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ ls
README.md  test.txt  test1.txt

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ nano test1.txt

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$


deepak@deepak-pc MINGW64 /c/git (firstbranch)
$


deepak@deepak-pc MINGW64 /c/git (firstbranch)
$

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ git add -A
warning: LF will be replaced by CRLF in test1.txt.
The file will have its original line endings in your working directory.

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ git commit -m "modify text1 in firstbranch"
[firstbranch 96323c6] modify text1 in firstbranch
 1 file changed, 2 insertions(+), 1 deletion(-)

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ git checkout master
Switched to branch 'master'

deepak@deepak-pc MINGW64 /c/git (master)
$


deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ ls
README.md  test.txt  test1.txt

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ cat test1.txt
this is created in firstbranch
deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ git checkout firstbranch
Switched to branch 'firstbranch'

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ ls
README.md  test.txt  test1.txt

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ cat test1.txt
this is created in firstbranch
modified in firstbranch

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ git checkout master
Switched to branch 'master'

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ echo "this is test2 text file" >test2.txt

deepak@deepak-pc MINGW64 /c/git (master)
$ echo "this is test3 text file" >test3.txt

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ ls
README.md  test.txt  test1.txt  test2.txt  test3.txt

deepak@deepak-pc MINGW64 /c/git (master)
$ rm test2.txt test3.txt

deepak@deepak-pc MINGW64 /c/git (master)
$ la
bash: la: command not found

deepak@deepak-pc MINGW64 /c/git (master)
$ ls
README.md  test.txt  test1.txt

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ git checkout firstbranch
Switched to branch 'firstbranch'

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ echo "this is test2 text file" >test2.txt

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ echo "this is test3 text file" >test3.txt

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$


deepak@deepak-pc MINGW64 /c/git (firstbranch)
$

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ git add -A
warning: LF will be replaced by CRLF in test2.txt.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in test3.txt.
The file will have its original line endings in your working directory.

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ git checkout master
Switched to branch 'master'
A       test2.txt
A       test3.txt

deepak@deepak-pc MINGW64 /c/git (master)
$ git checkout firstbranch
Switched to branch 'firstbranch'
A       test2.txt
A       test3.txt

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ git status
On branch firstbranch
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   test2.txt
        new file:   test3.txt


deepak@deepak-pc MINGW64 /c/git (firstbranch)
$

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ git commit -m "2nd test file in test2 in firstbranch"
[firstbranch 9391310] 2nd test file in test2 in firstbranch
 2 files changed, 2 insertions(+)
 create mode 100644 test2.txt
 create mode 100644 test3.txt

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ git status
On branch firstbranch
nothing to commit, working tree clean

deepak@deepak-pc MINGW64 /c/git (firstbranch)
$ git checkout master
Switched to branch 'master'

deepak@deepak-pc MINGW64 /c/git (master)
$ git rebase master
Current branch master is up to date.

deepak@deepak-pc MINGW64 /c/git (master)
$ ls
README.md  test.txt  test1.txt

deepak@deepak-pc MINGW64 /c/git (master)
$ git rebase firstbranch
First, rewinding head to replay your work on top of it...
Fast-forwarded master to firstbranch.

deepak@deepak-pc MINGW64 /c/git (master)
$


deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ ls
README.md  test.txt  test1.txt  test2.txt  test3.txt

deepak@deepak-pc MINGW64 /c/git (master)
$ cat test2.txt
this is test2 text file

deepak@deepak-pc MINGW64 /c/git (master)

deepak@deepak-pc MINGW64 /c/git (master)
$ ls
README.md  test.txt  test1.txt  test2.txt  test3.txt

deepak@deepak-pc MINGW64 /c/git (master)
$ cat test2.txt
this is test2 text file

deepak@deepak-pc MINGW64 /c/git (master)
$


deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/deepak/.ssh/id_rsa): y
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Passphrases do not match.  Try again.
Enter passphrase (empty for no passphrase):


deepak@deepak-pc MINGW64 /c/git (master)
$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/deepak/.ssh/id_rsa): Kmk123@#
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in Kmk123@#.
Your public key has been saved in Kmk123@#.pub.
The key fingerprint is:
SHA256:D3QYI499HNZE78lBB7JlkH+FSHZT8dVDn44BV9j+olI deepak@deepak-pc
The key's randomart image is:
+---[RSA 2048]----+
|      . o o*B=%B*|
|       = * o*X.=B|
|      . = + .o+.=|
|       . o   o=+.|
|        S    .+o.|
|         o  E . .|
|          .. . . |
|          . .    |
|           .     |
+----[SHA256]-----+

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ cat  Kmk123@#.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC5XXryejQa3N/jalaKWzIQQDx72ZyrWxBhGP8uHg38N0g2qqWdiQhRKzSmFkqeXfVYoS7lxwBr0213xW/BSmhGUjHTPszqjqajQTr9na+Qy2YsY61yAowY5v5LIzR1pzmi936IOf3qHogfCmfOT7k5wR7An9MtRPNa/SmKxCcFzGQEva8dIwSR7DQOY/cTFFh80k+4Flat4LdBn4cU2QyG93sxJ4OfJV00JCX/wE4F+r/8UkebPgGFgmaJxXNtlG3rCxZU2u4vhR75uS+vlffacyfwATm6JLs3C0eLouT4ajwQ0kCWLzsEXpn5KT9N3xptSLq8o8hKDAwhg1QjvR9x deepak@deepak-pc

deepak@deepak-pc MINGW64 /c/git (master)
$

deepak@deepak-pc MINGW64 /c/git (master)
$ ssh -T git@github.com
The authenticity of host 'github.com (192.30.253.113)' can't be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'github.com,192.30.253.113' (RSA) to the list of known hosts.
git@github.com: Permission denied (publickey).

deepak@deepak-pc MINGW64 /c/git (master)


deepak@deepak-pc MINGW64 /c/git (master)
$ ssh -T git@github.com
Warning: Permanently added the RSA host key for IP address '192.30.253.112' to the list of known hosts.
git@github.com: Permission denied (publickey).

deepak@deepak-pc MINGW64 /c/git (master)
$ git push origin master
Enumerating objects: 14, done.
Counting objects: 100% (14/14), done.
Delta compression using up to 4 threads.
Compressing objects: 100% (9/9), done.
Writing objects: 100% (13/13), 1.05 KiB | 43.00 KiB/s, done.
Total 13 (delta 3), reused 0 (delta 0)
remote: Resolving deltas: 100% (3/3), done.
To https://github.com/krishna0510/first.txt.git
   0f23728..9391310  master -> master

deepak@deepak-pc MINGW64 /c/git (master)
$
